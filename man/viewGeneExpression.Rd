% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/viz.R
\name{viewGeneExpression}
\alias{viewGeneExpression}
\title{viewGeneExpression - plot gene expression.}
\usage{
viewGeneExpression(
  image,
  counts,
  ter = NULL,
  genes = NULL,
  normalise = TRUE,
  cex = 10
)
}
\arguments{
\item{image}{a Vesalius data frame containing barcodes, x, y, cc, value,
cluster, and territory.}

\item{counts}{count matrix - either matrix, sparse matrix or seurat object
This matrix should contain genes as rownames and cells/barcodes as colnames}

\item{ter}{integer - Territory ID in which gene expression will be viewed. If
NULL, all territories will be selected.}

\item{genes}{character - gene of interest (only on gene at a time)}

\item{normalise}{logical - If TRUE, gene expression values will be min/max
normalised.}

\item{cex}{numeric - font size modulator}
}
\value{
a ggplot object (geom_raster)
}
\description{
viewGeneExpression - plot gene expression.
}
\details{
Visualization of gene expression in all or in selected territories.
Gene expression is shown "as is". This means that if no transformation
is applied to the data then normalized raw count will be shown.

If normalization and scaling have been applied, normalized counts will be
shown.

This also applies to any data transformation applied on the count matrix
or the Seurat object.

We recommend using Seurat Objects.

NOTE : You might be promoted to use geom_tiles instead of geom_raster.
However - this will increase file size to unreasonable heights.
}
\examples{
\dontrun{
data(vesalius)
# Seurat pre-processing
image <- NormalizeData(vesalius)
image <- FindVariableFeatures(image, nfeatures = 2000)
image <- ScaleData(image)
# converting to rgb
image <- rgbPCA(image,slices = 1)
image <- buildImageArray(image, sliceID=1)
# One segmentation round
image <- iterativeSegmentation.array(image)
image <- isolateTerritories.array(image, minBar = 5)
# In all points
g <- viewGeneExpression(image,vesalius, genes = "Cst3")
# In a specific territory
g1 <- viewGeneExpression(image, vesalius, ter = 1, genes = "Cst3")
}
}
