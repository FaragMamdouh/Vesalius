% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/morphology_operators.R
\name{territory_morphing}
\alias{territory_morphing}
\title{territoryMorphing applies morphological operators to a set of territoriees}
\usage{
territory_morphing(
  vesalius,
  territory = NULL,
  trial = "last",
  morphology_factor = 0,
  verbose = TRUE
)
}
\arguments{
\item{verbose}{logical - progress message output.}

\item{territories}{data.frame - Vesalius formatted data.frame (i.e. barcodes,
x,y,cc,value,cluster, territory) only containing territories of interest.}

\item{morphologyFactor}{integer or vector of integers describing growth
and/or shrink extent.}

\item{image}{data.frame - Vesalius formatted data.frame (i.e. barcodes,
x,y,cc,value,cluster, territory) containing all territories.}
}
\value{
Returns a Vesalius data.frame with "barcodes","x","y","cc",
"value","tile","cluster", and "territory".
This data.frame will contain the new territory after morphological operators
and will contain barcodes associated with other territories and colour
segments.
}
\description{
territoryMorphing applies morphological operators to a set of territoriees
}
\details{
Territory morphing can manipulate territories by growing, shrinking,
filling, and cleaning territories.
Growing = Positive integers - Territory will be dilated by x number of pixels
Shrinking = Negative integers - Territory will be contracted by x number of
pixels
Filling = grow followed by shrink.
Cleaning = shrink followed by grow.
}
\examples{
\dontrun{
data(vesalius)
# Seurat pre-processing
image <- NormalizeData(vesalius)
image <- FindVariableFeatures(image, nfeatures = 2000)
image <- ScaleData(image)
# converting to rgb
image <- rgbPCA(image,slices = 1)
image <- buildImageArray(image, sliceID=1)
# One segmentation round
image <- iterativeSegmentation.array(image)
image <- isolateTerritories.array(image, minBar = 5)
ter <- image \%>\% filter(territory == 1)
# grow
g <- territoryMorphing(ter,morphologyFactor = 5, image = image)
# shrink
s <- territoryMorphing(ter,morphologyFactor = -5, image = image)
# fill
f <- territoryMorphing(ter,morphologyFactor = c(5,-5), image = image)
# clean
c <- territoryMorphing(ter,morphologyFactor = c(-5,5), image = image)
}
}
