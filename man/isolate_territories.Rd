% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/image_processing.R
\name{isolate_territories}
\alias{isolate_territories}
\title{isolating territories from segmented Vesalius images}
\usage{
isolate_territories(
  vesalius,
  method = c("distance"),
  trial = "last",
  capture_radius = 0.025,
  global = TRUE,
  min_spatial_index = 10,
  verbose = TRUE
)
}
\arguments{
\item{method}{character describing barcode pooling method.
Currently, only "distance" availble}

\item{global}{logical - If TRUE, territories will be numbered across all
colour segments. If FALSE, territories will be numbered within each colour
segment.}

\item{verbose}{logical - progress message output.}

\item{image}{data.frame - Vesalius formatted data.frame (i.e. barcodes,
x,y,cc,value,tile) - Segmentation must have been applied beforehand!}

\item{captureRadius}{numeric - proportion of maximum distance between
barcodes that will be used to pool barcodes together (range 0 - 1).}

\item{minBar}{integer - minimum number of barcodes allowed in each territory}
}
\value{
Returns a Vesalius data.frame with "barcodes","x","y","cc",
"value","tile","cluster","territory".
"cluster" represents the colour segment the pixel belongs to and "territory"
describe the tissue territory after pooling.
}
\description{
isolating territories from segmented Vesalius images
}
\details{
Segmented images in the form of a Vesalius formatted data frame are
further separated into territories. This is accomplished by pooling barcodes
that are associated with a colour cluster into territories based on the
distance between each barcode.

First, \code{isolateTerritories.array} considers the maximum distance
between all beads. The captureRadius will define which proportion of this
distance should be considered.

Second, a seed barcode will be selected and all barcodes that are within the
capture distance of the seed barcode with be pooled together. This process
is then applied on barcodes that have been selected in this manner. The
process is repeated until all barcodes have been pooled into a territory.
If there are still barcodes remaining, a new seed barcode is selected and the
whole process is repeated. NOTE : Territory isolation is applied to each
colour segment independently.

If a territory does not contain enough barcodes, it will be pooled into the
isolated territory. This territory contains all isolated territories
regardless of colour cluster of origin.
}
\examples{
\dontrun{
data(vesalius)
# Seurat pre-processing
image <- NormalizeData(vesalius)
image <- FindVariableFeatures(image, nfeatures = 2000)
image <- ScaleData(image)
# converting to rgb
image <- rgbPCA(image,slices = 1)
image <- buildImageArray(image, sliceID=1)
# One segmentation round
image <- iterativeSegmentation.array(image)
image <- isolateTerritories.array(image, minBar = 5)
}
}
